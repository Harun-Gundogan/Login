@page "/login"
@using System.ComponentModel.DataAnnotations
@using LogIn.Data
@using LogIn.Services
@using Microsoft.EntityFrameworkCore
@inject DataContext DataContext
@inject AuthService AuthService

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="@HandleLogin" class="form-control">
    <DataAnnotationsValidator />
    <ValidationSummary />

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="text-danger mt-2">@errorMessage</div>
    }

    <div class="form-group mb-3" style="width:300px">
        <label for="username" class="col-form-label">Kullanıcı Adı:</label>
        <InputText id="username" @bind-Value="@loginModel.Username" class="form-control" />
    </div>

    <div class="form-group mb-3" style="width:300px">
        <label for="password" class="col-form-label">Şifre:</label>
        <InputText id="password" type="password" @bind-Value="@loginModel.Password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Giriş Yap</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();
    private string? errorMessage;

    [Inject]
    private NavigationManager Navigation { get; set; }

    private async Task HandleLogin()
    {
        try
        {
            var user = await DataContext.Users.FirstOrDefaultAsync(u => u.Username == loginModel.Username);

            if (user == null)
            {
                errorMessage = "Kullanıcı adı veya şifre yanlış.";
                return;
            }

            if (BCrypt.Net.BCrypt.Verify(loginModel.Password, user.PasswordHash))
            {
                AuthService.MarkUserAsAuthenticated(user.Username);
                Navigation.NavigateTo("/dashboard");
                return;
            }

            errorMessage = "Kullanıcı adı veya şifre yanlış.";
        }
        catch (DbUpdateException ex)
        {
            errorMessage = "Veritabanı hatası: " + ex.Message;
        }
        catch (Exception ex)
        {
            errorMessage = "Bir hata oluştu: " + ex.Message;
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Kullanıcı adı girmelisiniz.")]
        public string? Username { get; set; }

        [Required(ErrorMessage = "Şifre girmelisiniz.")]
        public string? Password { get; set; }
    }
}
